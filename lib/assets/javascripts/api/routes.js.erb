NANO("api.routes", function(NANO){
  var interpolate = /:(\w+)/g;
  var routes_list = {};
  var routes = function(route_name, params){
    if(!routes_list[route_name]){
      return false;
    }
    if(!params){
      return routes_list[route_name];
    }
    if(_.isString(params)){
      return routes_list[route_name] + "?" + params;
    }
    var cloned_params = _.clone(params);
    var route = routes_list[route_name].replace(interpolate, function(match, param_name){
      if(params[param_name] !== undefined){
        delete cloned_params[param_name];
        return encodeURIComponent(params[param_name]);
      }
      return "required parameter: " + param_name;
    });
    if(!_.isEmpty(cloned_params)){
      route += "?" + $.param(cloned_params);
    }
    return route;
  };
  routes.append = function(route, name){
    routes_list[name] = route;
  };
  <%
    helpers = NanoApi::Engine.routes.url_helpers
    routes = {
      searches_path: helpers.searches_path(format: :json),
      search: helpers.search_path(':search_id'),
      click_path: helpers.new_click_path(format: :json),
      autocomplete_path: helpers.places_path(format: :json),
      week_minimal_prices: helpers.week_minimal_prices_path(format: :json),
      month_minimal_prices: helpers.month_minimal_prices_path(format: :json),
      nearest_cities_prices: helpers.nearest_cities_prices_path(format: :json),
      search_click_path: helpers.search_click_path(':search_id', ':id'),
      airline_homepage: helpers.link_search_click_path(':search_id', ':id'),
      airline_deeplink: helpers.deeplink_search_click_path(':search_id', ':id') 
    }
  %>
  <% routes.each do |name, path| %>
    routes_list['<%= name %>'] = '<%= path %>';
  <% end %>

  return routes;
});